name: Docker Images

env:
  # Comma separated Docker platform list
  DOCKER_PLATFORMS: linux/amd64,linux/arm64/v8,linux/386
  # Override path to GitHub Container Repository
  GHCR_REPOSITORY: "${{ github.repository }}"

on:
  push:
    branches:
      - 'toolchain'
    tags:
      - '*-toolchain'

jobs:
  configure:
    runs-on: ubuntu-latest
    outputs:
      kernel_version: ${{ steps.kernel.outputs.kernel_version }}
      platforms: ${{ steps.platforms.outputs.platforms }}
      platforms_count: ${{ steps.platforms.outputs.platforms_count }}
      commit_short_sha: ${{ steps.build_vars.outputs.commit_short_sha }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Detect platform variables
      id: platforms
      run: |
        PLATFORMS_JSON_ARRAY=$(echo "\"$DOCKER_PLATFORMS\""  | jq -c 'split(",")')
        PLATFORMS_COUNT=$(echo "${PLATFORMS_JSON_ARRAY}" | jq '. | length')
        echo "Build for ${PLATFORMS_COUNT} platform(s): ${DOCKER_PLATFORMS}"
        echo "platforms=${PLATFORMS_JSON_ARRAY}" >> $GITHUB_OUTPUT
        echo "platforms_count=${PLATFORMS_COUNT}" >> $GITHUB_OUTPUT

    - name: Read Kernel variables
      id: kernel
      run: |
        KERNEL_VERSION=$(cat KERNEL_VERSION | head -n 1)
        echo "Kernel versions is '${KERNEL_VERSION}'"
        if [ "${{github.ref_type}}" == "tag" ]; then
          if [ "${KERNEL_VERSION}-toolchain" != "${{ github.ref_name }}" ]; then
            echo "Wrong tag name '${{ github.ref_name }}'. Expected name '${KERNEL_VERSION}-toolchain'. Did you forgot modify KERNEL_VERSION file?" >&2
            exit 1
          fi
        fi
        echo "kernel_version=${KERNEL_VERSION}" >> $GITHUB_OUTPUT

    - name: Build variables
      id: build_vars
      run: |
        SHORT_SHA=$(echo "${{ github.sha }}" | head -c 8)
        echo "  SHORT_SHA: ${SHORT_SHA}"
        echo "commit_short_sha=${SHORT_SHA}" >> $GITHUB_OUTPUT

  docker-build:
    needs:
    - configure
    strategy:
      matrix:
        platform: ${{ fromJson(needs.configure.outputs.platforms) }}
    runs-on: ubuntu-latest
    steps:
    - name: Set up environment variables
      run: |
        case "${{ matrix.platform }}" in
          linux/amd64)
            GENTOO_ARCH=amd64
            ;;
          linux/arm64/v8)
            GENTOO_ARCH=arm64
            ;;
          linux/386)
            GENTOO_ARCH=i686
            ;;
          *)
            echo "Unsupported platform '${{ matrix.platform }}'" >&2
            exit 1
            ;;
        esac
        
        DOCKER_LATEST_TAG=${{ (github.ref_type == 'tag' && 'latest') || 'snapshot' }}
        if [ "${{github.ref_type}}" == "tag" ]; then
          # Trim suffix '-toolchain'
          DOCKER_VERSION_TAG=$(echo "${{ github.ref_name }}" | rev | cut -d- -f2- | rev )
        else
          DOCKER_VERSION_TAG="snapshot"
        fi      
        DOCKER_SHA_TAG=${{ (github.ref_type == 'tag' && github.ref_name) || 'snapshot' }}.${{ needs.configure.outputs.commit_short_sha }}

        echo "GENTOO_ARCH=${GENTOO_ARCH}" | tee -a $GITHUB_ENV
        echo "DOCKER_LATEST_TAG=${DOCKER_LATEST_TAG}" | tee -a $GITHUB_ENV
        echo "DOCKER_VERSION_TAG=${DOCKER_VERSION_TAG}" | tee -a $GITHUB_ENV
        echo "DOCKER_SHA_TAG=${DOCKER_SHA_TAG}" | tee -a $GITHUB_ENV

    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to the GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build docker image
      uses: docker/build-push-action@v3
      with:
        context: .
        file: docker/${{ env.GENTOO_ARCH }}/Dockerfile
        build-args: |
          GENTOO_SOURCES_BUDNLE_IMAGE_TAG=${{ needs.configure.outputs.kernel_version }}
        platforms: ${{ matrix.platform }}
        push: true
        tags: |
          "ghcr.io/${{ env.GHCR_REPOSITORY }}/toolchain/${{ env.GENTOO_ARCH }}:${{ env.DOCKER_SHA_TAG }}"
          "ghcr.io/${{ env.GHCR_REPOSITORY }}/toolchain/${{ env.GENTOO_ARCH }}:${{ env.DOCKER_VERSION_TAG }}"
          "ghcr.io/${{ env.GHCR_REPOSITORY }}/toolchain/${{ env.GENTOO_ARCH }}:${{ env.DOCKER_LATEST_TAG }}"

  # publish-github:
  #   needs:
  #   - configure
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Log in to the GitHub Container Registry
  #     uses: docker/login-action@v2
  #     with:
  #       registry: ghcr.io
  #       username: ${{ github.actor }}
  #       password: ${{ secrets.GITHUB_TOKEN }}

  #   - name: Tags and push
  #     run: |
  #       skopeo copy --all \
  #         "docker://ghcr.io/${{ env.GHCR_REPOSITORY }}:${{ github.ref_name }}.${{ github.sha }}" \
  #         "docker://ghcr.io/${{ env.GHCR_REPOSITORY }}:${{ github.ref_name }}.${{ needs.configure.outputs.commit_short_sha }}"
  #       skopeo copy --all \
  #         "docker://ghcr.io/${{ env.GHCR_REPOSITORY }}:${{ github.ref_name }}.${{ needs.configure.outputs.commit_short_sha }}" \
  #         "docker://ghcr.io/${{ env.GHCR_REPOSITORY }}:${{ github.ref_name }}"
  #       skopeo copy --all \
  #         "docker://ghcr.io/${{ env.GHCR_REPOSITORY }}:${{ github.ref_name }}" \
  #         "docker://ghcr.io/${{ env.GHCR_REPOSITORY }}:latest"
